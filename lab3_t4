class Node:
    def __init__(self, data):
        self.data = data
        self.ref = None

class LinkedList:
    def __init__(self, values=None):
        self.head = None
        if values is not None:
            if isinstance(values, (list, tuple, set)):
                for value in values:
                    self.append(value)
            else:
                self.append(values)

    def append(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.ref:
                current = current.ref
            current.ref = new_node

    def display(self):
        current = self.head
        while current:
            print(current.data, end=" ")
            current = current.ref
        print()

    def insert_at_end(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return

        current = self.head
        while current.ref is not None:
            current = current.ref
        current.ref = new_node

# Example usage
l1 = LinkedList([1])
l1.display()

# Insert a value at the end
l1.insert_at_end(2)
l1.display()